name: Published Release Workflow

on:
  release:
    types:
      - published

jobs:
  validate-tag:
    runs-on: ubuntu-latest
    outputs:
      should_publish: ${{ steps.validate_tag.outputs.should_publish }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read package.json version
        id: package_version
        run: echo "VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Validate tag
        id: validate_tag
        run: |
          if [ "${{ github.event.release.tag_name }}" == "${{ env.VERSION }}" ]; then
            echo "Go to publish"
            echo "should_publish=true" >> $GITHUB_ENV
            echo "should_publish=true" >> $GITHUB_OUTPUT
          else
            echo "Go to delete"
            echo "should_publish=false" >> $GITHUB_ENV
            echo "should_publish=false" >> $GITHUB_OUTPUT
          fi

  delete-release:
    runs-on: ubuntu-latest
    needs: validate-tag
    if: needs.validate-tag.outputs.should_publish == 'false'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Delete release
        run: |
          gh release delete "${{ github.event.release.tag_name }}" --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete tag
        run: |
          git push --delete origin "${{ github.event.release.tag_name }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: validate-tag
    if: needs.validate-tag.outputs.should_publish == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Authenticate to NPM
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Build package
        run: npm run build

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
