name: Published Release Workflow

on:
  release:
    types:
      - published

jobs:
  validate-tag:
    runs-on: ubuntu-latest
    outputs:
      tag_mismatch: ${{ steps.validate_tag.outcome == 'failure' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read package.json version
        id: package_version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Validate tag
        id: validate_tag
        run: |
          if [ "v$version" != "${{ github.event.release.tag_name }}" ]; then
            echo "Tag mismatch: expected v$version, got ${{ github.event.release.tag_name }}"
            exit 1
          fi

  delete-release:
    runs-on: ubuntu-latest
    needs: validate-tag
    if: needs.validate-tag.outputs.tag_mismatch == 'true'
    steps:
      - name: Delete release
        run: |
          gh release delete "${{ github.event.release.tag_name }}" --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete tag
        run: |
          git push --delete origin "${{ github.event.release.tag_name }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: validate-tag
    if: needs.validate-tag.outputs.tag_mismatch == 'false'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      - name: Build package
        run: npm run build

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
